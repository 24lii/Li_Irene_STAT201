var_num <- as.numeric(var_string)
var_string <- as.character(-6)
cat(var_string, "has type", typeof(var_string))
var_num <- as.numeric(var_string)
var_even <- (var_num%%2 == 0)
var_pos <- (var_num>0)
cat(var_num, "has type", typeof(var_num), "\n")
cat("even:",var_even, "\n")
cat("positive:", var_pos)
print((var_pos != var_even))
var_seconds <- 61
#minutes:
num_min = var_seconds %/% 60
#doing the plural vs singular thing
if (num_min == 1){
min_name = paste(num_min, "minute")
} else {
min_name = paste(num_min, "minutes")
}
#seconds:
num_sec = var_seconds %% 60
#doing the plural vs singular thing
if (num_sec == 1){
sec_name = paste(num_sec, "second")
} else {
sec_name = paste(num_sec, "seconds")
}
cat(var_seconds, "seconds is", min_name, "and", sec_name)
num1 <- 10
num2 <- 28
num3 <- 4
if (num1 >= num2 && num1 >= num3) {
print(paste(num1, "is the largest"))
} else if (num2 >= num1 && num2 >= num3) {
print(paste(num2, "is the largest"))
} else {
print(paste(num3, "is the largest"))
}
if (num1 >= num2) {
if (num1 >= num3) {
print(paste(num1, "is the largest"))
} else {
print(paste(num3, "is the largest"))
}
} else {
if (num2 >= num3) {
print(paste(num2, "is the largest"))
} else {
print(paste(num3, "is the largest"))
}
}
num <- 5
product <- 1
for (i in 1:num) {
product <- product * i
}
print(product)
num = 24
factors = c()
for (i in 1:num){
if ((num %% i) == 0)
factors <- c(factors, i) #add factor to vector
}
print(factors)
num <- 89
# check if the number is prime
is_prime <- TRUE
if (num <= 1) {
is_prime <- FALSE
} else {
for (i in 2:(num-1)) {
if (num %% i == 0) {
is_prime <- FALSE
break
}
}
}
# Print the result
if (is_prime) {
cat(num, "is a prime number.")
} else {
cat(num, "is not a prime number.")
}
if (num1 >= num2) {
if (num1 >= num3) {
cat(num1, "is the largest"))
if (num1 >= num2) {
if (num1 >= num3) {
cat(num1, "is the largest")
} else {
cat(num3, "is the largest")
}
} else {
if (num2 >= num3) {
cat(num2, "is the largest")
} else {
cat(num3, "is the largest")
}
}
if (num1 >= num2 && num1 >= num3) {
cat(num1, "is the largest")
} else if (num2 >= num1 && num2 >= num3) {
cat(num2, "is the largest")
} else {
cat(num3, "is the largest")
}
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", i^2, ", and is the first number whose square exceeds", num)
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", i^2, ", and is the first number whose square exceeds", num)
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", i^2, ",", "and is the first number whose square exceeds", num)
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", i^2, paste0(","), "and is the first number whose square exceeds", num)
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", paste0(i^2, ","), "and is the first number whose square exceeds", num)
num <- 100
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", paste0(i^2, ","), "and is the first number whose square exceeds", num)
num <- 4000
#finding max num to be squared
i <- 1
while (i^2 <= num) {
i <- i + 1
}
cat(i, "squared is", paste0(i^2, ","), "and is the first number whose square exceeds", num)
